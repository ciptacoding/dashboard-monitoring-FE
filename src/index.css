@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 220 13% 10%;
    --foreground: 210 40% 98%;

    --card: 220 13% 13%;
    --card-foreground: 210 40% 98%;

    --popover: 220 13% 13%;
    --popover-foreground: 210 40% 98%;

    --primary: 47 96% 53%;
    --primary-foreground: 220 13% 10%;

    --secondary: 217 33% 17%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217 33% 17%;
    --muted-foreground: 215 20% 65%;

    --accent: 47 96% 53%;
    --accent-foreground: 220 13% 10%;

    --destructive: 0 72% 51%;
    --destructive-foreground: 210 40% 98%;

    --border: 217 33% 20%;
    --input: 217 33% 20%;
    --ring: 47 96% 53%;

    --radius: 0.5rem;

    /* Status colors for monitoring */
    --status-online: 142 71% 45%;
    --status-offline: 0 72% 51%;
    --status-unknown: 215 20% 65%;
    --status-warning: 45 93% 47%;

    /* Camera pin */
    --camera-pin: 47 96% 53%;
    --camera-pin-glow: 47 96% 53%;

    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }

  /* Leaflet styles */
  .leaflet-container {
    @apply bg-secondary;
  }

  .leaflet-popup-content-wrapper {
    @apply bg-card text-card-foreground rounded-lg shadow-lg;
  }

  .leaflet-popup-tip {
    @apply bg-card;
  }
}

@layer components {
  /* Camera pin pulse animation */
  .cam-pin {
    @apply relative w-4 h-4 rounded-full border-2 border-white shadow-lg;
    background-color: hsl(var(--camera-pin));
    z-index: 1000;
  }

  .cam-pin::before {
    content: '';
    @apply absolute inset-0 rounded-full animate-ping;
    background-color: hsl(var(--camera-pin-glow) / 0.6);
    animation: pulse-spread 2s cubic-bezier(0, 0, 0.2, 1) infinite;
  }

  .cam-pin.offline {
    background-color: hsl(var(--status-offline));
  }

  .cam-pin.offline::before {
    background-color: hsl(var(--status-offline) / 0.6);
  }

  /* Status indicators */
  .status-dot {
    @apply w-2 h-2 rounded-full;
  }

  .status-dot.online {
    background-color: hsl(var(--status-online));
    box-shadow: 0 0 8px hsl(var(--status-online) / 0.5);
  }

  .status-dot.offline {
    background-color: hsl(var(--status-offline));
    box-shadow: 0 0 8px hsl(var(--status-offline) / 0.5);
  }

  .status-dot.unknown {
    background-color: hsl(var(--status-unknown));
  }

  /* Grid cell styles */
  .grid-cell {
    @apply relative bg-card border border-border rounded-lg overflow-hidden;
    transition: var(--transition-smooth);
  }

  .grid-cell:hover {
    @apply border-primary;
    box-shadow: 0 0 20px hsl(var(--primary) / 0.2);
  }

  /* Video container */
  .video-container {
    @apply relative w-full h-full bg-secondary/50;
  }

  .video-container video {
    @apply w-full h-full object-cover;
  }

  /* React Resizable Panels handle */
  .resize-handle {
    position: relative;
    width: 8px;
    background: hsl(var(--border));
  }
  .resize-handle:hover {
    background: hsl(var(--primary) / 0.2);
  }
  .resize-handle::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 4px;
    height: 40px;
    background: hsl(var(--muted-foreground));
    border-radius: 2px;
  }
}

@layer utilities {
  @keyframes pulse-spread {
    0% {
      transform: scale(1);
      opacity: 0.6;
    }
    50% {
      transform: scale(1.5);
      opacity: 0.3;
    }
    100% {
      transform: scale(2);
      opacity: 0;
    }
  }
}
