export type CameraStatus = 'READY' | 'ONLINE' | 'OFFLINE' | 'ERROR' | 'UNKNOWN';

export interface Camera {
  id: string;
  name: string;
  description?: string;
  rtsp_url: string;
  stream_id?: string;
  
  // Location (geospatial)
  latitude: number;
  longitude: number;
  building?: string;
  zone?: string;
  
  // Technical specifications
  ip_address?: string;
  port?: number;
  manufacturer?: string;
  model?: string;
  resolution?: string;
  fps?: number;
  
  // Metadata
  tags?: string[];
  status: CameraStatus;
  last_seen?: string;
  is_active: boolean;
  
  // Stream URLs (auto-generated by backend)
  hls_url?: string;
  webrtc_url?: string;
  snapshot_url?: string;
  
  // Audit fields
  created_by?: string;
  created_at: string;
  updated_at: string;
}

export interface CreateCameraRequest {
  name: string;
  description?: string;
  rtsp_url: string;
  latitude: number;
  longitude: number;
  building?: string;
  zone?: string;
  ip_address?: string;
  port?: number;
  manufacturer?: string;
  model?: string;
  resolution?: string;
  fps?: number;
  tags?: string[];
}

export interface UpdateCameraRequest {
  name?: string;
  description?: string;
  rtsp_url?: string;
  latitude?: number;
  longitude?: number;
  building?: string;
  zone?: string;
  status?: CameraStatus;
  tags?: string[];
  is_active?: boolean;
}

export interface ApiResponse<T> {
  success: boolean;
  message: string;
  data: T;
}

export interface PaginatedResponse<T> {
  success: boolean;
  message: string;
  data: T[];
  pagination: {
    page: number;
    page_size: number;
    total_items: number;
    total_pages: number;
  };
}


export type GridLayout = '2x2' | '4x4' | '2x4' | '6x4' | '3x6';

export interface GridLayoutConfig {
  cols: number;
  rows: number;
}

export const GRID_LAYOUTS: Record<GridLayout, GridLayoutConfig> = {
  '2x2': { cols: 2, rows: 2 },
  '4x4': { cols: 4, rows: 4 },
  '2x4': { cols: 2, rows: 4 },
  '6x4': { cols: 6, rows: 4 },
  '3x6': { cols: 3, rows: 6 },
};